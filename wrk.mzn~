%% File generated by YARPLER

include "globals.mzn";

var set of {1, 2, 3}: m1_dienste;
int: m1_id = 1;
var set of {1, 2, 3}: m2_dienste;
int: m2_id = 2;
int: zf1_start = 0;
int: zf1_stop = 8;
int: zf1_id = 1;
int: zf2_start = 8;
int: zf2_stop = 16;
int: zf2_id = 2;
int: zf3_start = 10;
int: zf3_stop = 18;
int: zf3_id = 3;
int: d1_fenster = 1;
int: d1_start = 1;
int: d1_stop = 9;
int: d1_id = 1;
int: d2_fenster = 2;
int: d2_start = 8;
int: d2_stop = 16;
int: d2_id = 2;
int: d3_fenster = 3;
int: d3_start = 10;
int: d3_stop = 18;
int: d3_id = 3;


constraint
	let {array[1..2] of var int: array0 = [bool2int(d1_id in m1_dienste),bool2int(d1_id in m2_dienste) ]} in sum(t0 in 1..2)(array0[t0]) == 1
;

constraint
	let {array[1..2] of var int: array1 = [bool2int(d2_id in m1_dienste),bool2int(d2_id in m2_dienste) ]} in sum(t0 in 1..2)(array1[t0]) == 1
;

constraint
	let {array[1..2] of var int: array2 = [bool2int(d3_id in m1_dienste),bool2int(d3_id in m2_dienste) ]} in sum(t0 in 1..2)(array2[t0]) == 1
;

constraint
	not(d1_id in m1_dienste /\ d2_id in m1_dienste /\ not(zf1_stop < zf2_start \/ zf2_stop < zf1_start)) \/ 
	not(d1_id in m1_dienste /\ d3_id in m1_dienste /\ not(zf1_stop < zf3_start \/ zf3_stop < zf1_start)) \/ 
	not(d2_id in m1_dienste /\ d1_id in m1_dienste /\ not(zf2_stop < zf1_start \/ zf1_stop < zf2_start)) \/ 
	not(d2_id in m1_dienste /\ d3_id in m1_dienste /\ not(zf2_stop < zf3_start \/ zf3_stop < zf2_start)) \/ 
	not(d3_id in m1_dienste /\ d1_id in m1_dienste /\ not(zf3_stop < zf1_start \/ zf1_stop < zf3_start)) \/ 
	not(d3_id in m1_dienste /\ d2_id in m1_dienste /\ not(zf3_stop < zf2_start \/ zf2_stop < zf3_start))
;

constraint
%%	not(d1_id in m2_dienste /\ d2_id in m2_dienste /\ not(zf1_stop < zf2_start \/ zf2_stop < zf1_start)) \/
%%	not(d1_id in m2_dienste /\ d3_id in m2_dienste /\ not(zf1_stop < zf3_start \/ zf3_stop < zf1_start)) \/ 
%%	not(d2_id in m2_dienste /\ d1_id in m2_dienste /\ not(zf2_stop < zf1_start \/ zf1_stop < zf2_start)) \/ 
%%	not(d2_id in m2_dienste /\ d3_id in m2_dienste /\ not(zf2_stop < zf3_start \/ zf3_stop < zf2_start)) \/ 
%%	not(d3_id in m2_dienste /\ d1_id in m2_dienste /\ not(zf3_stop < zf1_start \/ zf1_stop < zf3_start)) \/ 
	not(d3_id in m2_dienste /\ d2_id in m2_dienste /\ not(zf3_stop < zf2_start \/ zf2_stop < zf3_start))
;



solve satisfy
;



output [ "" , "m1_dienste=" , show(m1_dienste) , " "   , "m2_dienste=" , show(m2_dienste) , " "   ];

