%% File generated by YARPLER

include "globals.mzn";

var 1..1: d1_anzahl;
int: d1_istfrei = 0;
int: d1_id = 1;
var 1..1: d2_anzahl;
int: d2_istfrei = 0;
int: d2_id = 2;
var 1..1: d3_anzahl;
int: d3_istfrei = 0;
int: d3_id = 3;
var int: f_anzahl;
int: f_istfrei = 1;
int: f_id = 4;
int: t1_id = 1;
int: t2_id = 2;
int: m1_id = 1;
int: m2_id = 2;
int: m3_id = 3;
var set of {1, 2, 3, 4}: m1t1_dienste;
int: m1t1_ma = 1;
int: m1t1_tag = 1;
int: m1t1_id = 1;
var set of {1, 2, 3, 4}: m1t2_dienste;
int: m1t2_ma = 1;
int: m1t2_tag = 2;
int: m1t2_id = 2;
var set of {1, 2, 3, 4}: m2t1_dienste;
int: m2t1_ma = 2;
int: m2t1_tag = 1;
int: m2t1_id = 3;
var set of {1, 2, 3, 4}: m2t2_dienste;
int: m2t2_ma = 2;
int: m2t2_tag = 2;
int: m2t2_id = 4;
var set of {1, 2, 3, 4}: m3t1_dienste;
int: m3t1_ma = 3;
int: m3t1_tag = 1;
int: m3t1_id = 5;
var set of {1, 2, 3, 4}: m3t2_dienste;
int: m3t2_ma = 3;
int: m3t2_tag = 2;
int: m3t2_id = 6;


constraint
	card(m1t1_dienste) == 1
;

constraint
	card(m1t2_dienste) == 1
;

constraint
	card(m2t1_dienste) == 1
;

constraint
	card(m2t2_dienste) == 1
;

constraint
	card(m3t1_dienste) == 1
;

constraint
	card(m3t2_dienste) == 1
;

constraint
	let {array[1..6] of var int: array0 = [bool2int(d1_id in m1t1_dienste),bool2int(d1_id in m1t2_dienste),bool2int(d1_id in m2t1_dienste),bool2int(d1_id in m2t2_dienste),bool2int(d1_id in m3t1_dienste),bool2int(d1_id in m3t2_dienste) ]} in sum(t0 in 1..6)(array0[t0]) == d1_anzahl
;

constraint
	let {array[1..6] of var int: array1 = [bool2int(d2_id in m1t1_dienste),bool2int(d2_id in m1t2_dienste),bool2int(d2_id in m2t1_dienste),bool2int(d2_id in m2t2_dienste),bool2int(d2_id in m3t1_dienste),bool2int(d2_id in m3t2_dienste) ]} in sum(t0 in 1..6)(array1[t0]) == d2_anzahl
;

constraint
	let {array[1..6] of var int: array2 = [bool2int(d3_id in m1t1_dienste),bool2int(d3_id in m1t2_dienste),bool2int(d3_id in m2t1_dienste),bool2int(d3_id in m2t2_dienste),bool2int(d3_id in m3t1_dienste),bool2int(d3_id in m3t2_dienste) ]} in sum(t0 in 1..6)(array2[t0]) == d3_anzahl
;



solve satisfy
;



output [ "" , "d1_anzahl=" , show(d1_anzahl) , " "   , "d2_anzahl=" , show(d2_anzahl) , " "   , "d3_anzahl=" , show(d3_anzahl) , " "   , "f_anzahl=" , show(f_anzahl) , " "   , "m1t1_dienste=" , show(m1t1_dienste) , " "   , "m1t2_dienste=" , show(m1t2_dienste) , " "   , "m2t1_dienste=" , show(m2t1_dienste) , " "   , "m2t2_dienste=" , show(m2t2_dienste) , " "   , "m3t1_dienste=" , show(m3t1_dienste) , " "   , "m3t2_dienste=" , show(m3t2_dienste) , " "   ];

