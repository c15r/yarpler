module Yarpler
  module Utils
    class Minizinc

      T_CONSTANT = "%s: %s = %s;\n" # int: id_dienst_frei = 0;
      T_HEADER = "%% File generated by YARPLER\n"
      T_INCLUDES = "include \"globals.mzn\";\n"
      T_VARIABLE = "var %s: %s;" # var 0..2: m0t0;
      T_FOOTER = "solve satisfy;" # @TODO: Wird momentan als Hack missbraucht um den kompletten Durchstich zu erm√∂glichen ;)

      def run_from_file(filename)
        file = File.new(filename, "r")
        content = file.read
        file.close
        run(content)
      end

      def run(model)
        path = 'wrk.mzn'
        File.open(path, "wb") { |f| f.write(model) }
        @cmd = %x( minizinc #{path} )
      end

      def convert(d)

        code = T_HEADER
        code << T_INCLUDES
        d.each do |key, var|
          var.get_list_of_attributes
          code<<convert_attributes(key, var)
        end
        code << T_FOOTER
        code
      end

      def convert_attributes(name, ressource)
        code=""
        ressource.get_list_of_attributes.each do |a|
          case ressource.get_variabletype(a)
            when "CONSTANT"
              code<< T_CONSTANT % [ressource.get_datatype(a), a + "_" + name, ressource.get_value(a)]
            when "VARIABLE"
              code<< T_VARIABLE % [ressource.get_value(a), name + "_" + a]
          end
        end
        code
      end

      def print
        puts @cmd
      end

    end
  end
end